{"version":3,"sources":["test.mp3","components/Login.tsx","img/example-cover.jpg","api/Audio.tsx","api/Hooks.tsx","components/Cell.tsx","components/Shared.tsx","components/ActiveSong.tsx","components/SongList.tsx","components/Albums.tsx","components/Artists.tsx","components/Dialog.tsx","components/NavBar.tsx","components/Player.tsx","components/Playlists.tsx","components/PlaylistsBar.tsx","api/Seeder.ts","components/Seeder.tsx","components/Songs.tsx","components/App.tsx","serviceWorker.ts","index.tsx","config.ts","api/Api.tsx"],"names":["module","exports","Login","useState","username","setUsername","password","setPassword","error","setError","className","onSubmit","e","string","preventDefault","API","login","Buffer","toString","catch","message","htmlFor","id","type","placeholder","onChange","target","value","required","to","context","createContext","play","pause","position","shuffle","repeat","setShuffle","setRepeat","playing","volume","setVolume","toggleVolume","Provider","usePlayer","useContext","useCreateAudio","undefined","song","setSong","setPosition","update","audio","currentTime","useMemo","Audio","set","saveVolumed","saveVolume","v","useEffect","addEventListener","removeEventListener","useVolume","a","Api","then","src","console","log","length","duration","paused","SongButton","s","selected","onClick","icon","faPause","faPlay","useApi","endpoint","params","result","setResult","loading","setLoading","setMessage","query","querystring","encode","subscribe","r","Loading","useLoading","enpoint","render","Cell","props","children","area","style","other","gridArea","ICONS","faHeadphones","faMusic","faGuitar","faDrum","faRecordVinyl","faCompactDisc","Cover","alt","rest","hasImage","setImage","Math","floor","random","onLoad","onError","draggable","ModelView","useParams","ModelSidebar","Single","match","m","name","active","objects","map","key","classes","ActiveCover","album","cover_url","ActiveSong","SongRow","LoadingSongRow","url","artists","title","Artist","Album","Songs","songs","Active","SongList","Albums","albums","release","t","rowSpan","Artists","DialogContext","React","Dialog","dialog","close","open","useDialog","TransitionGroup","CSSTransition","timeout","text","buttons","i","click","Nav","path","useLocation","pathname","links","href","faList","faUser","faSeedling","faDoorOpen","IconButton","timestamp","time","minutes","seconds","toFixed","padStart","SongInfo","width","Volume","faVolumeMute","faVolumeDown","faVolumeUp","adjust","w","currentTarget","offsetWidth","l","getBoundingClientRect","left","x","clientX","onMouseMove","Player","faStepBackward","faStepForward","faRandom","faRedoAlt","Playlists","p","Playlist","songNames","artistNames","range","array","sort","b","slice","min","SEEDER","count","artistIds","resource_uri","Array","fill","_","millis","Promise","res","setTimeout","generator","tracker","call","setProgress","fetch","old","setTotal","all","delete","post","require","this","seedModels","uploadFile","wait","ignore","Endpoint","models","Seeder","progress","total","endpoints","Object","keys","filter","includes","toLowerCase","disabled","seed","SinglePage","Logout","logout","Page","page","indexOf","document","charAt","toUpperCase","component","App","loggedIn","setLoggedIn","isLoginIn","pages","PlaylistsBar","exact","Boolean","window","location","hostname","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","API_URL","observers","Set","observer","callback","forEach","o","add","method","localStorage","getItem","JSON","parse","getApiKey","removeItem","apiKey","Error","headers","response","body","getReader","read","content","blob","Blob","URL","createObjectURL","args","startsWith","stringify","status","json","reload","base64","platform","vendor","date","format","Date","purpose","setItem"],"mappings":"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Ab,yB,kBChBZwM,GAAY,CACd,iBACA,wBACA,wBACA,eACA,sBACA,gBACA,sBACA,aACA,kBACA,SACA,WACA,4BACA,yBACA,qBACA,4BACA,sBACA,kBACA,mBACA,sBACA,iBACA,qBACA,UACA,eACA,oBACA,6BACA,2BACA,+BACA,sBACA,kBACA,gBACA,oBACA,OACA,SACA,0BACA,mCACA,sBACA,oBACA,4BACA,uBACA,0BACA,mBACA,iBACA,iBACA,YACA,cACA,mBACA,+BACA,aACA,yBACA,iBACA,sBACA,WACA,gBACA,QACA,QACA,qBACA,8BACA,qBACA,qBACA,qBACA,wBACA,uBACA,kBACA,mBACA,iBACA,UAGEC,GAAc,CAChB,gBACA,eACA,kBACA,SACA,8BACA,iBACA,kBACA,wBACA,qBACA,YACA,iBACA,gBACA,QACA,eACA,eACA,gBACA,eACA,SACA,+BACA,eACA,iBACA,gBACA,cACA,eACA,gBACA,SACA,gBACA,YACA,QACA,cACA,aACA,gBACA,kBACA,QACA,WACA,YACA,eACA,cACA,gBACA,YACA,kBACA,YACA,4BACA,gBACA,UACA,eACA,oBACA,2BACA,QACA,cAGJ,SAASC,GAASC,EAAY9C,GAC1B,OAAO8C,EAAMC,MAAK,SAACtJ,EAAGuJ,GAAJ,OAAUnG,KAAKE,SAAW,MAAKkG,MAAM,EAAGpG,KAAKqG,IAAIJ,EAAM/I,OAAQiG,I,IAuHtEmD,GAFA,I,+FAlGNC,GACD,MAAO,K,8BAGHA,GACJ,OAAOP,GAAMD,GAAaQ,GAAOxF,KAAI,SAAAH,GAAI,MAAK,CAAEA,OAAMzG,KAAM,U,6BAGzDsH,GACH,IAAM+E,EAAY/E,EAAQV,KAAI,SAAAnE,GAAC,OAAIA,EAAE6J,gBACrC,OAAO,SAACF,GAAD,OAAmBP,GAAMF,GAAWS,GAAOxF,KAAI,SAAAH,GAAI,MAAK,CAC3DA,OACAa,QAASuE,GAAMQ,EAAW,GAC1BrE,QAxBF,GAAN,OAAU,KAAOnC,KAAKC,MAAsB,GAAhBD,KAAKE,kB,4BA4B3BgC,GACF,OAAO,SAACqE,GAAD,OAAmBP,GAAM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","file":"static/js/main.36e01104.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/test.cf56ed92.mp3\";","import React, { useState } from 'react';\nimport API from '../api/Api';\nimport { Link } from 'react-router-dom';\n\n\nfunction base64(string: string) {\n    return new Buffer(string).toString('base64');\n}\n\nfunction Login() {\n\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState<string | null>(null);\n\n    return (\n        <div className='user-login'>\n            <form onSubmit={e => {\n                e.preventDefault()\n                API.login(base64(`${username}:${password}`))\n                    .catch(e => setError(e.message))\n            }}>\n\n                <h1>Login</h1>\n\n                {error && <p className='error'>{error}</p>}\n\n                <div>\n                    <label htmlFor='username'>Username</label>\n                    <input\n                        id='username'\n                        type='text'\n                        placeholder='Username'\n                        onChange={e => setUsername(e.target.value)}\n                        value={username}\n                        required\n                    />\n                </div>\n\n                <div>\n                    <label htmlFor='password'>Password</label>\n                    <input\n                        id='password'\n                        type='password'\n                        placeholder='Password'\n                        onChange={e => setPassword(e.target.value)}\n                        value={password}\n                        required\n                    />\n                </div>\n\n                <button type='submit'>Login</button>\n\n                <Link to={`/registration`} >Register</Link>\n\n            </form>\n\n        </div>\n\n\n    );\n}\nexport default Login;\n\n","module.exports = __webpack_public_path__ + \"static/media/example-cover.b2e600a7.jpg\";","import React, { useState, useEffect, useMemo, createContext, useContext } from \"react\";\nimport { ISong } from \"./Models\";\nimport Api from \"./Api\";\nimport { FontAwesomeIcon as Icon } from \"@fortawesome/react-fontawesome\";\nimport { faPlay, faPause } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface PlayerData {\n    song?: ISong;\n    play: (t?: ISong) => void;\n    pause: () => void;\n    position: number;\n    shuffle: boolean;\n    repeat: boolean;\n    setShuffle: (b: boolean) => void;\n    setRepeat: (b: boolean) => void;\n    playing: () => boolean;\n    volume: number;\n    setVolume: (v: number) => void;\n    toggleVolume: () => void;\n}\n\nconst context = createContext<PlayerData>({\n    play: () => { },\n    pause: () => { },\n    position: 0,\n    shuffle: false,\n    repeat: false,\n    setShuffle: () => { },\n    setRepeat: () => { },\n    playing: () => false,\n    volume: 0,\n    setVolume: () => { },\n    toggleVolume: () => { },\n});\n\nexport const Provider = context.Provider;\n\nexport function usePlayer(): PlayerData {\n    return useContext(context);\n}\n\n/**\n * Can be used anywhere to access and modify volume\n * TODO This is where the actual volume logic will happen\n */\nfunction useVolume(audio: HTMLAudioElement) {\n    const [volume, set] = useState(0.4);\n    const [saveVolumed, saveVolume] = useState(volume);\n\n    const setVolume = (v: number) => {\n        audio.volume = v;\n    }\n\n    useEffect(() => {\n        const update = () => set(audio.volume);\n        audio.addEventListener('volumechange', update);\n        return () => audio.removeEventListener('volumechange', update);\n    }, [audio]);\n\n    useEffect(() => {\n        audio.volume = volume;\n    }, [volume, audio]);\n\n    const toggleVolume = () => {\n        if (volume > 0) {\n            saveVolume(volume);\n            setVolume(0);\n        } else {\n            setVolume(saveVolumed);\n        }\n    }\n\n    return { volume, setVolume, toggleVolume };\n}\n\nexport function useCreateAudio(): PlayerData {\n    const [song, setSong] = useState<ISong | undefined>(undefined);\n    const [shuffle, setShuffle] = useState(false);\n    const [repeat, setRepeat] = useState(true);\n    const [position, setPosition] = useState(0);\n\n    const update = () => setPosition(audio.currentTime);\n\n    const audio = useMemo(() => new Audio(), []);\n    const volume = useVolume(audio);\n\n    useEffect(() => {\n        audio.addEventListener('timeupdate', update);\n        return () => audio.removeEventListener('timeupdate', update);\n    }, [audio])\n\n    const play = async (song?: ISong) => {\n\n        if (song) await Api.audio(song.audio)\n            .then(src => {\n                setSong(song);\n\n                audio.src = src;\n                audio.currentTime = 0;\n                audio.play();\n\n            }).catch(e => console.log(e));\n\n        else await audio?.play();\n    }\n\n    const pause = () => {\n        audio?.pause();\n    }\n\n    return {\n        song: song ? { ...song, length: audio.duration } : undefined,\n        play, pause,\n        shuffle, repeat, setShuffle, setRepeat,\n        playing: () => !!audio && !audio.paused,\n        position,\n        ...volume\n    };\n}\n\nexport function SongButton({ song }: { song: ISong }) {\n    const { play, pause, playing, song: s } = usePlayer();\n    const selected = song.id === s?.id;\n\n    const onClick = () => {\n        if (selected) {\n            if (playing()) pause();\n            else play();\n        } else play(song);\n    }\n\n    return (\n        <button className='song-button' {...{ onClick }}>\n            <Icon icon={(selected && playing()) ? faPause : faPlay} />\n        </button>\n    );\n}\n\nexport default usePlayer;","import querystring, { ParsedUrlQueryInput } from 'querystring';\nimport React, { SyntheticEvent, useEffect, useState } from 'react';\nimport API from './Api';\n\n/**\n * React hook to subscibe to a specific api endpoint\n * @param endpoint The url\n * @param params Optional query parameters\n */\nexport function useApi<R>(endpoint: string, params?: ParsedUrlQueryInput) {\n    const [result, setResult] = useState<undefined | R>();\n    const [loading, setLoading] = useState(true);\n    const [message, setMessage] = useState<string | undefined>();\n\n    const query = querystring.encode(params);\n    useEffect(() => {\n        setLoading(true);\n        setResult(undefined);\n\n        return API.subscribe<R>(endpoint, query).then((r, e) => {\n            setResult(r);\n            setMessage(e?.message);\n            setLoading(false);\n        })\n    }, [query, endpoint]);\n\n    return [result, loading, message] as [R | undefined, boolean, string | undefined];\n}\n\n/**\n * React hook to send post requests\n * @param endpoint The url\n * @param data Optional body data\n * @param cb Optional callback function called on success with the response\n */\nexport function useSubmit<R = any>(endpoint: string, data?: any, cb?: (r?: R) => unknown) {\n    const [error, setError] = useState<any>();\n    const [inProgress, setLoading] = useState(false);\n\n    const post = (e?: SyntheticEvent) => {\n        e?.preventDefault();\n        setLoading(true);\n        API.post<R>(endpoint, data)\n            .then(r => {\n                if (cb) cb(r);\n                return undefined;\n            })\n            .catch(e => e as Error)\n            .then(e => {\n                setError(e);\n                setLoading(false);\n            });\n    }\n\n    const message = error?.message;\n    return { message, error, valid: !message, post, inProgress };\n}\n\n/**\n * A universal loading component\n */\nexport function Loading() {\n    return <span className='loading' />;\n}\n\nexport type Render<R> = (result: R) => JSX.Element | null;\n\n/**\n * React hook to render loading componets universally\n * @param enpoint The api url\n * @param params Optional query parameters\n * @param render The render function called once the data has been received\n */\nexport function useLoading<R>(enpoint: string, params: ParsedUrlQueryInput | Render<R>, render?: Render<R>): JSX.Element | null {\n    const p = typeof params === 'object' ? params : undefined;\n    const r = typeof params === 'function' ? params : render;\n    const [result, loading, error] = useApi<R>(enpoint, p);\n\n    if (loading) return <Loading />\n    if (!result) return <span className='empty-info'>{error || 'Not found'}</span>\n    return r ? r(result) : null;\n}","import React, { ReactNode, HTMLAttributes } from 'react';\n\nfunction Cell(props: { area: string, children?: ReactNode } & HTMLAttributes<HTMLDivElement>) {\n    const { children, className, area, style, ...other } = props;\n    return (\n        <div className={`${className ?? ''} ${area}`} style={{ gridArea: area, position: 'relative', ...style }} {...other}>\n            {children}\n        </div>\n    );\n}\n\nexport default Cell;","import classes from 'classnames';\nimport React, { useMemo, useState, CSSProperties } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { Render, useLoading } from '../api/Hooks';\nimport { IList, IModel } from '../api/Models';\nimport Cell from './Cell';\nimport { faHeadphones, faMusic, faGuitar, faDrum, faRecordVinyl, faCompactDisc } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon as Icon } from '@fortawesome/react-fontawesome';\n\nconst ICONS = [faHeadphones, faMusic, faGuitar, faDrum, faRecordVinyl, faCompactDisc];\n\nexport function Cover(props: { alt: string, src?: string } & CSSProperties) {\n    const { src, alt, ...rest } = props;\n    const [hasImage, setImage] = useState(false);\n\n    const icon = useMemo(() => ICONS[Math.floor(Math.random() * ICONS.length)], [])\n\n    return <Cell area='cover' style={{ ...rest }}>\n        <img\n            onLoad={() => setImage(true)}\n            onError={() => setImage(false)}\n            draggable={false}\n            {... { alt, src }}\n        />\n        {!hasImage && <Icon icon={icon} />}\n    </Cell>\n}\n\nexport function ModelView<M extends IModel>(props: { endpoint: string, render: Render<M> }) {\n    const { endpoint } = props;\n    const { id } = useParams();\n\n    return (\n        <>\n            <ModelSidebar {...{ endpoint }} />\n            <Cell area='active'>\n                {id\n                    ? <Single {...{ id }} {...props} />\n                    : <h1>Select a{endpoint.match(/^[aeiou]/i) ? 'n' : ''} {endpoint}</h1>\n                }\n            </Cell>\n        </>\n    )\n}\n\nfunction Single<M extends IModel>(props: { endpoint: string, id: string, render: Render<M> }) {\n    const { id, endpoint, render } = props;\n    return useLoading<M>(`${endpoint}/${id}`, m =>\n        <>\n            <h1>{m.name}</h1>\n            {render(m)}\n        </>\n    );\n}\n\nexport function ModelSidebar<M extends IModel>({ endpoint }: { endpoint: string }) {\n    const { id: active } = useParams();\n\n    return useLoading<IList<M>>(endpoint, ({ objects }) =>\n        <Cell area='list'>\n            <ul className='list'>\n                {(objects.length > 0)\n                    ? objects.map(({ name, id }) =>\n                        <li key={id} className={classes({ active: id.toString() === active })}>\n                            <Link to={`/${endpoint}s/${id}`}>\n                                {name}\n                            </Link>\n                        </li>\n                    )\n                : <li className='empty-info'>No {endpoint}s yet</li>\n                }\n            </ul>\n        </Cell>\n    );\n}","import React from 'react';\nimport Cell from './Cell';\nimport { IAlbum, ISong } from '../api/Models';\nimport { useApi } from '../api/Hooks';\nimport { NO_COVER } from './App'\nimport usePlayer from '../api/Audio';\nimport { Cover } from './Shared';\n\nfunction ActiveSong() {\n    const { song } = usePlayer();\n    return song ? <ActiveCover {...song} /> : null;\n}\n\nfunction ActiveCover(song: ISong) {\n    const [album] = useApi<IAlbum>(song.album);\n\n    return (\n            <Cover\n                src={album?.cover_url}\n                alt='Active Song Cover'\n            />\n    )\n}\n\nexport default ActiveSong;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useApi, useLoading } from '../api/Hooks';\nimport { IAlbum, IArtist, ISong } from '../api/Models';\nimport { SongButton } from '../api/Audio';\n\nfunction Songs({ songs }: { songs: (ISong | string)[] }) {\n    if ((songs?.length ?? 0) === 0) return <p className='empty-info'>No songs yet</p>\n    return (\n        <div className='songlist'>\n            <div>\n                <p id='play'></p>\n                <p id='title'>Title</p>\n                <p id='artists'>Artists</p>\n                <p id='album'>Album</p>\n                <p id='length'>Length</p>\n            </div>\n            {songs.map(song =>\n                <SongRow key={typeof song === 'string' ? song : song.id} {...{ song: song }} />\n            )}\n        </div>\n    )\n}\n\nfunction SongRow({ song }: { song: ISong | string }) {\n    if (typeof song === 'string') return <LoadingSongRow url={song} />\n\n    const { album, artists, title, length } = song;\n    return (\n        <div>\n            <p><SongButton {...{ song }} /></p>\n            <p>{title}</p>\n            <p>{artists.map(a =>\n                <Artist key={a} url={a} />\n            )}</p>\n            <p><Album url={album} /></p>\n            <p>{length}</p>\n        </div>\n    );\n}\n\nfunction LoadingSongRow({ url }: { url: string }) {\n    return useLoading<ISong>(url, song => <SongRow {...{ song }} />);\n}\n\nfunction Artist({ url }: { url: string }) {\n    const [a] = useApi<IArtist>(url);\n    return a ? <Link className='seperate-comma' to={`/artists/${a.id}`}>{a.name}</Link> : null;\n}\n\nfunction Album({ url }: { url: string }) {\n    const [a] = useApi<IAlbum>(url);\n    return a ? <Link className='seperate-comma' to={`/albums/${a.id}`}>{a.name}</Link> : null;\n}\n\nexport default Songs;","import React from 'react';\nimport { IAlbum, IArtist } from '../api/Models';\nimport { ModelView, Cover } from './Shared';\nimport SongList from './SongList';\nimport Cell from './Cell';\nimport { useLoading } from '../api/Hooks';\nimport { Link } from 'react-router-dom';\n\nfunction Active({ name, artists, songs, cover_url }: IAlbum) {\n    return (\n        <>\n            <Cover src={cover_url} alt={name} />\n            <Cell area='artists'>\n                {artists.map(a => <Artist key={a} url={a} />)}\n            </Cell>\n            <SongList {...{ songs }} />\n        </>\n    )\n}\n\nfunction Artist({ url }: { url: string }) {\n    return useLoading<IArtist>(url, ({ name, id }) =>\n        <Link to={`/artists/${id}`}>{name}</Link>\n    );\n}\n\nfunction Albums() {\n    return <ModelView endpoint='album' render={(a: IAlbum) => <Active {...a} />} />\n}\n\nexport default Albums;","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Loading, useApi, useLoading } from '../api/Hooks';\nimport { IAlbum, IArtist, IList, ISong } from '../api/Models';\nimport Cell from './Cell';\nimport { Cover, ModelView } from './Shared';\n\nfunction Artists() {\n    return <ModelView endpoint='artist' render={(a: IArtist) => <Artist {...a} />} />;\n}\n\nfunction Artist({ albums }: IArtist) {\n    return (\n        <>\n            <Cell area='albums'>\n                {albums.length > 0\n                    ? albums.map(a => <Album key={a} url={a} />)\n                    : <p className='empty-info'>No albums yet</p>\n                }\n            </Cell>\n        </>\n    );\n}\n\nfunction Album({ url }: { url: string }) {\n    return useLoading<IAlbum>(url, ({ cover_url, name, release, songs }) => (\n        <div>\n            <h5>{name} - (Genre {release})</h5>\n            <Cover\n                src={cover_url}\n                alt='Cover'\n            />\n            <table>\n                <tbody>\n                    {(songs.length > 0)\n                        ? songs.map(t => <SongRow key={t} url={t} />)\n                        : <tr><td className='empty-info'>No songs yet</td></tr>\n                    }\n                </tbody>\n            </table>\n        </div>\n    ));\n}\n\nfunction SongRow({ url }: { url: string }) {\n    const [song] = useApi<ISong>(url);\n\n    return (\n        <tr>\n            {song\n                ? <>\n                    <td>{song.name}</td>\n                    <td>{song.length}</td>\n                </>\n                : <td rowSpan={2}><Loading /></td>\n            }\n        </tr>\n    );\n}\n\nexport default Artists;","import React, { useContext } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nexport interface DialogProps {\n    text: string;\n    buttons: {\n        text: string;\n        className?: string;\n        click?: () => unknown\n    }[];\n}\n\nfunction Dialog({ dialog }: { dialog: DialogProps | null }) {\n    const { close } = useDialog();\n\n    return (\n        <TransitionGroup>\n            {dialog &&\n                <CSSTransition key='dialog' timeout={200}>\n                    <div className='dialog'>\n                        <p>{dialog.text}</p>\n                        <ul>\n                            {dialog.buttons.map(({ text, className, click }, i) =>\n                                <button key={i} onClick={() => {\n                                    if (click) click();\n                                    close();\n                                }} {...{ className }}>\n                                    {text}\n                                </button>\n                            )}\n                        </ul>\n                    </div>\n                </CSSTransition>\n            }\n        </TransitionGroup>\n    )\n}\n\nconst DialogContext = React.createContext<[\n    DialogProps | null,\n    (d: DialogProps | null) => unknown\n]>([null, () => { }]);\n\nexport function useDialog() {\n    const [, open] = useContext(DialogContext);\n    const close = () => open(null);\n    return { open, close };\n}\n\nexport const Provider = DialogContext.Provider;\n\nexport default Dialog;","import { faCompactDisc, faList, faMusic, faUser, faSeedling, faDoorOpen } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon as Icon } from '@fortawesome/react-fontawesome';\nimport classes from 'classnames';\nimport React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nfunction Nav() {\n    const path = useLocation().pathname;\n\n    const links = [\n        { href: '/playlists', text: 'Playlists', icon: faList },\n        { href: '/albums', text: 'Albums', icon: faCompactDisc },\n        { href: '/artists', text: 'Artists', icon: faUser },\n        { href: '/songs', text: 'Songs', icon: faMusic },\n        { href: '/seed', text: 'Seeder', icon: faSeedling },\n        { href: '/logout', text: 'Logout', icon: faDoorOpen },\n    ];\n\n    return (\n        <nav>\n            <ul>\n                {links.map(({ text, href, icon }) =>\n                    <li key={href} className={classes({ active: path === href })}>\n                        <Link to={href}>\n                            <span>{text}</span>\n                            <Icon {...{ icon }} />\n                        </Link>\n                    </li>\n                )}\n            </ul>\n        </nav>\n    );\n}\n\nexport default Nav;\n","import React, { useState, MouseEvent } from 'react';\nimport Cell from './Cell';\nimport { FontAwesomeIcon as Icon } from '@fortawesome/react-fontawesome';\nimport { IconDefinition } from '@fortawesome/fontawesome-common-types';\nimport { faPlay, faStepForward, faStepBackward, faRandom, faVolumeDown, faVolumeUp, faVolumeMute, faRedoAlt, faPause } from '@fortawesome/free-solid-svg-icons'\nimport { IArtist, ISong } from '../api/Models';\nimport { useApi } from '../api/Hooks';\nimport usePlayer from '../api/Audio';\n\nfunction IconButton(props: { icon: IconDefinition, area?: string, onClick?: () => unknown }) {\n    const { area, icon, ...rest } = props;\n    return (\n        <Cell className='icon-button' area={area ?? ''} {...rest}>\n            <Icon {...{ icon }} />\n        </Cell >\n    )\n}\n\nfunction Player() {\n    const { song, position, play, pause, playing } = usePlayer();\n\n    return (\n        <Cell area='player'>\n            {song && <SongInfo {...song} {...{ position }} />}\n\n            <IconButton icon={faStepBackward} area='previous' />\n            <IconButton icon={faStepForward} area='next' />\n            <IconButton onClick={playing() ? pause : () => play()} icon={playing() ? faPause : faPlay} area='play' />\n            <IconButton icon={faRandom} area='shuffle' />\n            <IconButton icon={faRedoAlt} area='repeat' />\n\n            <Volume />\n        </Cell>\n    );\n}\n\nfunction timestamp(time: number) {\n    const minutes = Math.floor(time / 60);\n    const seconds = time - minutes * 60;\n    return `${minutes}:${seconds.toFixed(0).padStart(2, '0')}`;\n}\n\nfunction SongInfo(song: ISong & { position: number }) {\n    const { title, artists, length, position } = song;\n\n    return (\n        <Cell area='info'>\n            <h4>{title}</h4>\n            <p>{artists?.map(a => <Artist key={a} url={a} />)}</p>\n            <div className='song-progress'>\n                <span>{timestamp(position)}</span>\n                <span>-{timestamp(length - position)}</span>\n                <div style={{ width: `${position / length * 100}%` }} />\n            </div>\n        </Cell>\n    );\n}\n\nfunction Artist({ url }: { url: string }) {\n    const [a] = useApi<IArtist>(url);\n    return a ? <span>{a.name}</span> : null;\n}\n\nfunction Volume() {\n    const { volume, setVolume, toggleVolume } = usePlayer();\n\n    const icon = volume === 0\n        ? faVolumeMute\n        : volume < 0.5\n            ? faVolumeDown\n            : faVolumeUp\n\n    const adjust = (e: MouseEvent<HTMLDivElement>) => {\n        const w = e.currentTarget.offsetWidth;\n        const l = e.currentTarget.getBoundingClientRect().left;\n        const x = e.clientX - l;\n        const v = x / w;\n        setVolume(v);\n    }\n\n    return (\n        <Cell area='volume'>\n            <IconButton {...{ icon }} onClick={toggleVolume} />\n            <div className='bar' onClick={adjust} onMouseMove={e => {\n                if (e.buttons > 0) adjust(e);\n            }}>\n                <div style={{ width: `${volume * 100}%` }} />\n            </div>\n        </Cell>\n    );\n}\n\nexport default Player;","import React from 'react';\nimport { IPlaylist } from '../api/Models';\nimport { ModelView } from './Shared';\nimport SongList from './SongList';\n\nfunction Active({ songs , ...rest }: IPlaylist) {\n    return <SongList {...{ songs: songs }} />\n}\n\nfunction Playlists() {\n    return <ModelView endpoint='playlist' render={(p: IPlaylist) => <Active {...p} />} />\n}\n\nexport default Playlists;","import classes from 'classnames';\nimport React from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useLoading } from '../api/Hooks';\nimport { IList, IPlaylist } from '../api/Models';\nimport Cell from './Cell';\n\nfunction Playlist() {\n    const { id: active } = useParams();\n\n    return useLoading<IList<IPlaylist>>('playlist', ({ objects }) =>\n        <Cell area='playlists'>\n            {(objects.length > 0)\n                ? <ul className='list'>\n                    {objects.map(({ id, name }) =>\n                        <li key={id} className={classes({ active: id.toString() === active })}>\n                            <Link to={`/playlists/${id}`}>{name}</Link>\n                        </li>\n                    )}\n                </ul>\n                : <p className='empty-info'>No playlists yet</p>\n            }\n        </Cell>\n    );\n}\n\nexport default Playlist;\n\n","import Api from './Api';\nimport { IList, IModel, IArtist, IAlbum, ISong } from './Models';\nimport { Dispatch, SetStateAction } from 'react';\n\nconst songNames = [\n    \"Daunting Moons\",\n    \"The Inside-Out Matter\",\n    \"No One Works At Anger\",\n    \"It Uses They\",\n    \"Pawns At the Spring\",\n    \"The Bowl Find\",\n    \"Obstructing History\",\n    \"Sing Doors\",\n    \"Feverish Thorns\",\n    \"Listen\",\n    \"Thoughts\",\n    \"From The Phantom Penguins\",\n    \"Rule Dos On a Prisoner\",\n    \"Visions In Cadenza\",\n    \"The Ambitious Sweet Child\",\n    \"The Love of Journal\",\n    \"The Magic's Act\",\n    \"Mercy Buy School\",\n    \"Gamble Broadcasting\",\n    \"On They Savior\",\n    \"Dreaming Universes\",\n    \"Missing\",\n    \"Bound Cigars\",\n    \"The Smooth Stream\",\n    \"I Sends Through Expression\",\n    \"No One Finishs Everybody\",\n    \"Something Without the Swords\",\n    \"The Harmony Imagine\",\n    \"Typing Activity\",\n    \"Try Right Now\",\n    \"Bare Machinations\",\n    \"Have\",\n    \"Moment\",\n    \"Of The Venturesome Bond\",\n    \"Photography Cans From a Building\",\n    \"Power From Serenade\",\n    \"The Cool Yearning\",\n    \"The Places of Sweet Child\",\n    \"The Souls's Children\",\n    \"Earaches Listen Crafter\",\n    \"Healing Kneeling\",\n    \"From He Person\",\n    \"Drooling Lines\",\n    \"Undoubted\",\n    \"Bad Outlaws\",\n    \"The Which Island\",\n    \"It Stands Under Expectations\",\n    \"I Puts Its\",\n    \"Date Under the Forever\",\n    \"The Death Give\",\n    \"Slaughtering Matter\",\n    \"Lose War\",\n    \"Solitary Body\",\n    \"Drink\",\n    \"Touch\",\n    \"Like The Same Fair\",\n    \"Building Feels Under a Rose\",\n    \"Flames Of Official\",\n    \"The Abandoned Disk\",\n    \"The Height of Silk\",\n    \"The Anything's Terror\",\n    \"Hope Understand Muse\",\n    \"Village Sailing\",\n    \"Through We Woman\",\n    \"Pleading Names\",\n    \"Hungry\"\n];\n\nconst artistNames = [\n    'Talking Heads',\n    'Carl Perkins',\n    'Curtis Mayfield',\n    'R.E.M.',\n    'Diana Ross and the Supremes',\n    'Lynyrd Skynyrd',\n    'Nine Inch Nails',\n    'Booker T. and the MGs',\n    'Guns n’ Roses',\n    'Tom Petty',\n    'Carlos Santana',\n    'The Yardbirds',\n    'Jay-Z',\n    'Gram Parsons',\n    'Tupac Shakur',\n    'Black Sabbath',\n    'James Taylor',\n    'Eminem',\n    'Creedence Clearwater Revival',\n    'The Drifters',\n    'Elvis Costello',\n    'The Four Tops',\n    'The Stooges',\n    'Beastie Boys',\n    'The Shirelles',\n    'Eagles',\n    'Hank Williams',\n    'Radiohead',\n    'AC/DC',\n    'Frank Zappa',\n    'The Police',\n    'Jackie Wilson',\n    'The Temptations',\n    'Cream',\n    'Al Green',\n    'The Kinks',\n    'Phil Spector',\n    'Tina Turner',\n    'Joni Mitchell',\n    'Metallica',\n    'The Sex Pistols',\n    'Aerosmith',\n    'Parliament and Funkadelic',\n    'Grateful Dead',\n    'Dr. Dre',\n    'Eric Clapton',\n    'Howlin’ Wolf',\n    'The Allman Brothers Band',\n    'Queen',\n    'Pink Floyd'\n]\n\nfunction range<T>(array: T[], i: number) {\n    return array.sort((a, b) => Math.random() - 0.5).slice(0, Math.min(array.length, i));\n}\n\nfunction random<T>(array: T[]) {\n    return range(array, 1)[0];\n}\n\nfunction randomDate() {\n    return `${1960 + Math.floor(Math.random() * 60)}`;\n}\n\nexport interface ITracker {\n    setTotal: Dispatch<SetStateAction<number>>,\n    setProgress: Dispatch<SetStateAction<number>>,\n    setMessage?: Dispatch<SetStateAction<string | null>>,\n}\n\nclass Seeder {\n\n    tags(count: number) {\n        return []\n    }\n\n    artists(count: number) {\n        return range(artistNames, count).map(name => ({ name, type: 'P' }));\n    }\n\n    albums(artists: IArtist[]) {\n        const artistIds = artists.map(a => a.resource_uri);\n        return (count: number) => range(songNames, count).map(name => ({\n            name,\n            artists: range(artistIds, 2),\n            release: randomDate(),\n        }));\n    }\n\n    songs(albums: IAlbum[]) {\n        return (count: number) => range(songNames, count).map(title => {\n            const { artists, resource_uri } = random(albums);\n            return {\n                title,\n                artists,\n                album: resource_uri,\n                length: Math.floor(Math.random() * 100 + 100),\n            };\n        })\n    }\n\n    playlists(count: number) {\n        return new Array(count).fill(null).map((_, i) => ({\n            name: 'Playlist ' + i,\n        }));\n    }\n\n    private wait(millis: number) {\n        return new Promise(res => setTimeout(res, millis));\n    }\n\n    private async seedModels<M extends IModel>(endpoint: string, count: number, generator: (i: number) => unknown[], tracker?: ITracker) {\n\n        tracker?.setMessage?.call(null, `Fetching ${endpoint}s`)\n        tracker?.setProgress(0);\n\n        const old = await Api.fetch<IList<IModel>>(endpoint);\n        tracker?.setTotal(old.objects.length + count);\n\n        tracker?.setMessage?.call(null, `Deleting ${endpoint}s`)\n        await Promise.all(old.objects.map(m =>\n            Api.delete(m.resource_uri, {}, false)\n                .catch(e => console.error(e))\n                .then(() => tracker?.setProgress(i => i + 1))\n        ));\n\n        tracker?.setMessage?.call(null, `Seeding ${endpoint}s`)\n        await Promise.all(generator(count).map(m =>\n            Api.post(endpoint, m, false)\n                .catch(e => console.error(e))\n                .then(() => tracker?.setProgress(i => i + 1))\n        ));\n\n        const { objects } = await Api.fetch<IList<M>>(endpoint);\n        return objects;\n    }\n\n    async uploadFile(songs: ISong[], tracker?: ITracker) {\n        tracker?.setTotal(songs.length);\n        tracker?.setProgress(0);\n        tracker?.setMessage?.call(null, 'Uploading Songs');\n        \n        songs.map(() => {\n\n            const audio = require('../test.mp3');\n            console.log(audio);\n\n            tracker?.setProgress(i => i + 1);\n        });\n    }\n\n    async seed(tracker?: ITracker) {\n\n        const artists = await this.seedModels<IArtist>('artist', 20, this.artists, tracker);\n        const albums = await this.seedModels<IAlbum>('album', 20, this.albums(artists), tracker);\n        const songs = await this.seedModels<ISong>('song', 70, this.songs(albums), tracker);\n        await this.uploadFile(songs, tracker);\n\n\n        tracker?.setMessage?.call(null, 'Done');\n        this.wait(200);\n        tracker?.setTotal(0);\n        tracker?.setMessage?.call(null, null);\n\n        Api.update();\n\n    }\n\n}\n\nconst SEEDER = new Seeder();\n\nexport default SEEDER;","import React, { useState } from 'react';\nimport SEEDER from \"../api/Seeder\";\nimport classes from 'classnames';\nimport { useApi, Loading } from '../api/Hooks';\nimport { IList } from '../api/Models';\n\ninterface IEndpoints {\n    [key: string]: {\n        list_endpoint: string,\n        schema: string\n    }\n}\n\nconst ignore = [\n    'songinplaylist',\n    'track',\n    'apikey',\n]\n\nfunction Endpoint({ endpoint }: { endpoint: string }) {\n    const [models] = useApi<IList<unknown>>(endpoint);\n    const count = models?.objects?.length;\n\n    if(models && count === undefined) return null;\n\n    return (\n        <div>\n            <p>{endpoint}</p>\n            <p>\n                {models\n                    ? `${count} model${count === 1 ? '' : 's'}`\n                    : <Loading />\n                }\n            </p>\n        </div>\n    )\n}\n\nfunction Seeder() {\n    const [progress, setProgress] = useState(0);\n    const [total, setTotal] = useState(0);\n    const [message, setMessage] = useState<string | null>(null);\n    const loading = (total > 0);\n\n    const [endpoints] = useApi<IEndpoints>('');\n\n    const seed = () => SEEDER.seed({ setProgress, setTotal, setMessage }).catch(e => console.error(e))\n\n    return (\n        <>\n            <div className='endpoints'>\n                {endpoints && Object.keys(endpoints).filter(e => !ignore.includes(e.toLowerCase())).map(e =>\n                    <Endpoint key={e} endpoint={e} />\n                )}\n            </div>\n\n            <button className={classes({ disabled: loading })} onClick={seed}>\n                <p>{loading ? 'Seeding...' : 'Seed!'}</p>\n            </button>\n\n            {loading &&\n                <>\n                    <div className='progress'>\n                        <div style={{ width: `${progress / total * 100}%` }} />\n                        <p>{progress} / {total}</p>\n                    </div>\n                    <p>{message}</p>\n                </>\n            }\n        </>\n    );\n}\n\nexport default Seeder;","import React from 'react';\nimport { useLoading } from '../api/Hooks';\nimport { IList, ISong } from '../api/Models';\nimport SongList from './SongList';\n\nfunction Songs() {\n    return useLoading<IList<ISong>>('song', ({ objects }) =>\n        <SongList songs={objects} />\n    )\n}\n\nexport default Songs;","import React, { useEffect, useState, ReactNode } from 'react';\nimport { BrowserRouter as Router, Redirect, Route, Switch, useLocation } from 'react-router-dom';\nimport { Provider as AudioProvider, useCreateAudio } from '../api/Audio';\nimport '../style/general.scss';\nimport ActiveSong from './ActiveSong';\nimport Albums from './Albums';\nimport Artists from './Artists';\nimport Cell from './Cell';\nimport Dialog, { DialogProps, Provider as DialogProvider } from './Dialog';\nimport Nav from './NavBar';\nimport Player from './Player';\nimport Playlists from './Playlists';\nimport PlaylistsBar from './PlaylistsBar';\nimport Registration from './Registration';\nimport Seeder from './Seeder';\nimport Songs from './Songs';\nimport Api from '../api/Api';\nimport Login from './Login';\nimport { Loading } from '../api/Hooks';\n\nexport const NO_COVER = require('../img/example-cover.jpg');\n\nfunction SinglePage({ children }: { children: ReactNode }) {\n\treturn <section className='single'>{children}</section>;\n}\n\nfunction Logout() {\n\tuseEffect(() => {\n\t\tApi.logout();\n\t});\n\treturn <Redirect to='' />\n}\n\nfunction App() {\n\tconst [loggedIn, setLoggedIn] = useState<boolean | null>(null);\n\n\tuseEffect(() => {\n\t\tApi.isLoginIn().then(b => setLoggedIn(b));\n\t})\n\n\tconst dialog = useState<DialogProps | null>(null);\n\tconst audio = useCreateAudio();\n\n\tconst pages: IPage[] = [\n\t\t{ path: '/songs', component: Songs },\n\t\t{ path: '/playlists/:id?', component: Playlists },\n\t\t{ path: '/artists/:id?', component: Artists },\n\t\t{ path: '/albums/:id?', component: Albums },\n\t\t{ path: '/songs', component: Songs },\n\t\t{ path: '/seed', component: Seeder },\n\t];\n\n\treturn (\n\t\t<DialogProvider value={dialog}>\n\t\t\t<AudioProvider value={audio}>\n\t\t\t\t<Router>\n\n\t\t\t\t\t{loggedIn\n\t\t\t\t\t\t? <section className='container'>\n\t\t\t\t\t\t\t<Nav />\n\t\t\t\t\t\t\t<Player />\n\t\t\t\t\t\t\t<ActiveSong />\n\t\t\t\t\t\t\t<PlaylistsBar />\n\n\t\t\t\t\t\t\t<Dialog dialog={dialog[0]} />\n\n\t\t\t\t\t\t\t<Switch>\n\n\t\t\t\t\t\t\t\t{pages.map(page =>\n\t\t\t\t\t\t\t\t\t<Route key={page.path} path={page.path}>\n\t\t\t\t\t\t\t\t\t\t<Page {...page} />\n\t\t\t\t\t\t\t\t\t</Route >\n\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t<Route exact path='/'>\n\t\t\t\t\t\t\t\t\t<Redirect to='/playlists' />\n\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t\t<Route path='/logout'>\n\t\t\t\t\t\t\t\t\t<Logout />\n\t\t\t\t\t\t\t\t</Route>\n\n\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t</section>\n\n\t\t\t\t\t\t: <SinglePage>\n\t\t\t\t\t\t\t{loggedIn === false\n\t\t\t\t\t\t\t\t? <Login />\n\t\t\t\t\t\t\t\t: <Loading />\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</SinglePage>\n\t\t\t\t\t}\n\n\t\t\t\t</Router>\n\n\t\t\t</AudioProvider>\n\t\t</DialogProvider>\n\t);\n}\n\nexport interface IPage {\n\tpath: string;\n\tcomponent: () => JSX.Element | null;\n\tkey?: string;\n\ttext?: string;\n}\n\nfunction Page(page: IPage) {\n\n\tconst path = useLocation().pathname.slice(1) + '/';\n\tconst key = page.key ?? path.slice(0, path.indexOf('/'));\n\n\tuseEffect(() => {\n\t\tdocument.title = 'OSS - ' + key.charAt(0).toUpperCase() + key.slice(1).toLowerCase();\n\t}, [key]);\n\n\treturn (\n\t\t<Cell area='page' id={key}>\n\t\t\t<page.component />\n\t\t</Cell>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n//import 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const DEV = !process.env.NODE_ENV || process.env.NODE_ENV === 'development';\n\n//const BASE_URL = DEV ? 'https://de0.win' : '';\nconst BASE_URL = '';\nexport const API_URL = `${BASE_URL}/api/v1`;","import querystring, { ParsedUrlQueryInput } from 'querystring';\nimport { API_URL } from '../config';\nimport format from 'dateformat';\nimport { IApiKey } from './Models'\n\n/**\n * Replaced once we know the format the data will be sent by the server\n */\ntype Response<O> = O;\n\n\ninterface IObserver<O> {\n    url: string;\n    params?: ParsedUrlQueryInput | string;\n    callback: (result?: O, error?: Error) => unknown;\n}\n\nexport interface IApi {\n\n    subscribe<O>(url: string, params?: ParsedUrlQueryInput | string): ({\n        then: (callback: (result?: O | undefined, error?: Error | undefined) => unknown) => () => void;\n    });\n\n    post<O>(url: string, args: any): Promise<O>;\n\n    delete<O>(url: string, args: any): Promise<O>;\n\n    put<O>(url: string, args: any): Promise<O>;\n\n}\n\ntype Method = 'post' | 'delete' | 'put' | 'get';\nclass Api implements IApi {\n\n    private observers: Set<IObserver<any>> = new Set();\n\n    call<O>(observer: IObserver<O>) {\n        const { url, params, callback } = observer;\n        this.fetch<O>(url, params)\n            .then(r => callback(r))\n            .catch(e => callback(undefined, e));\n    }\n\n    update() {\n        this.observers.forEach(o => this.call(o));\n    }\n\n    subscribe<O>(url: string, params?: ParsedUrlQueryInput | string) {\n        return {\n            then: (callback: (result?: O, error?: Error) => unknown) => {\n                const o = { url, params, callback };\n                this.observers.add(o);\n                this.call(o);\n                return () => {\n                    this.observers.delete(o);\n                }\n            }\n        }\n    }\n\n    async fetch<O>(endpoint: string, params?: ParsedUrlQueryInput | string) {\n        const query = typeof params === 'string' ? params : querystring.encode(params ?? {});\n        return this.method<O>('get', `${endpoint}/?${query}`);\n    }\n\n    private getApiKey(): IApiKey | null {\n        const key = localStorage.getItem('apikey');\n        if (key) return JSON.parse(key);\n        return null;\n    }\n\n    public async isLoginIn() {\n        if (!this.getApiKey()) return false;\n\n        return this.fetch('artist')\n            .then(() => true)\n            .catch(e => {\n                console.log(e);\n                localStorage.removeItem('apikey');\n                return false;\n            });\n    }\n\n    public async audio(url: string) {\n        const apiKey = this.getApiKey();\n        if (!apiKey) throw new Error('Not logged in');\n\n        const response = await fetch(require('../test.mp3'), {\n            //const response = await fetch(url, {\n            headers: {\n                'Authorization': apiKey.key\n            }\n        });\n\n        const content = await response.body?.getReader().read();\n        if (!content?.value) throw new Error('No audio found');\n\n        const blob = new Blob([content.value], { type: 'audio/mp3' })\n        return URL.createObjectURL(blob);\n\n    }\n\n    private async method<O>(method: Method, endpoint: string, args?: any, update = true) {\n        const apiKey = this.getApiKey();\n        if (!apiKey) throw new Error('Not logged n');\n\n        let url = endpoint;\n        if (!url.startsWith(API_URL)) url = `${API_URL}/${url}`\n        if (method !== 'get') url += '/';\n\n        const response = await fetch(url, {\n            method: method.toUpperCase(),\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization': apiKey.key,\n            },\n            body: args ? JSON.stringify(args) : undefined,\n        });\n\n        if (update && method !== 'get') this.update();\n\n        if (response.status === 200)\n            return response.json() as Promise<Response<O>>;\n        else\n            throw new Error('Not logged in');\n\n    }\n\n    async post<O = string>(url: string, args: any = {}, update = true) {\n        return this.method<O>('post', url, args, update);\n    }\n\n    async put<O = string>(url: string, args: any = {}, update = true) {\n        return this.method<O>('put', url, args, update);\n    }\n\n    async delete<O = string>(url: string, args: any = {}, update = true) {\n        return this.method<O>('delete', url, args, update);\n    }\n\n    async logout() {\n        const apiKey = this.getApiKey();\n\n        if (apiKey) await this.delete(`apikey/${apiKey.id}`)\n            .catch(e => console.error(e))\n\n        localStorage.removeItem('apikey');\n        window.location.reload();\n\n    }\n\n    async login(base64: string) {\n\n        const url = `${API_URL}/apikey/`;\n\n        const { platform, vendor } = navigator;\n        const date = format(new Date());\n\n        const response = await fetch(url, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization': `Basic ${base64}`,\n            },\n            body: JSON.stringify({ purpose: `${vendor} ${platform}, ${date}` }),\n        });\n\n        this.update();\n\n        if (response.status !== 201) throw new Error('Invalid credentials');\n\n        const key = await response.json()\n        localStorage.setItem('apikey', JSON.stringify(key));\n\n        window.location.reload();\n\n    }\n\n}\n\n\n\nconst API = new Api();\n\nexport default API;"],"sourceRoot":""}